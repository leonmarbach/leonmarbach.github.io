?lm
library(quanteda)
x <- "in linguist morpholog and inform retriev, stem is the process for reduc inflect word to their stem, base or root form-gener a written word form. the stem need not be ident to the morpholog root of the word; it is usual suffici that relat word map to the same stem, even if thi stem is not in itself a valid root. algorithm for stem have been studi in comput scienc sinc 1968. mani search engin treat word with the same stem as synonym as a kind of queri broaden, a process call conflat."
ntoken(x)
ntype(x)
types(x)
type(x)
?ntype
ntype(x, remove_punct = TRUE)
?types
types(x)
x <- "The AU was originally defined as the length of the semi-major axis of the Earth's elliptical orbit around the Sun. In 1976 the International Astronomical Union revised the definition of the AU for greater precision, defining it as that length for which the Gaussian gravitational constant (k) takes the value 0.017 202 098 95 when the units of measurement are the astronomical units of length, mass and time.[5][7] An equivalent definition is the radius of an unperturbed circular Newtonian orbit about the Sun of a particle having infinitesimal mass, moving with an angular frequency of 0.017 202 098 95 radians per day,[2] or that length for which the heliocentric gravitational constant (the product GM) is equal to (0.017 202 098 95)2 AU3/d2. It is approximately equal to the mean Earth-Sun distance."
ntoken(x)
ntoken(x, remove_punct = TRUE)
yourname <- "Marbach, LÃ©on";
sunetid  <- "06503015";
yourtime <- paste(Sys.Date(),Sys.time())
knitr::opts_chunk$set(echo = TRUE)
library(ISLR2)
head(Boston)
?Boston
lm(medv~lstat*tax)
lm(medv~lstat*tax, data=Boston)
summary(lm(medv~lstat*tax, data=Boston))
summary(lm(medv~I(lstat*tax), data=Boston))
?lm
library(ISLR2)
attach(Credit)
Credit
summary(Credit)
attach(Credit)
credit <- Credit
View(credit)
lm(balance ~ income + student, data = credit)
lm(Balance ~ Income + Student, data = credit)
fit <- lm(Balance ~ Income + Student, data = credit)
summary(fit)
plot(fit)
library(ggplot2)
df <- read.csv("Advertising.csv")
fit <- lm(sales ~ TV, data = df)
df$predicted <- predict(fit)
df$residuals <- residuals(fit)
ggplot(df, aes(x = TV, y = sales)) +
geom_smooth(method = "lm", se = FALSE) +
geom_segment(aes(xend = TV, yend = predicted), color = 'grey') +
geom_point(color = 'red') +
theme_classic()
library(ggplot2)
df <- read.csv("Advertising.csv")
fit <- lm(sales ~ TV, data = df)
df$predicted <- predict(fit)
df$residuals <- residuals(fit)
ggplot(df, aes(x = TV, y = sales)) +
geom_smooth(method = "lm", se = FALSE) +
geom_segment(aes(xend = TV, yend = predicted), color = 'grey') +
geom_point(color = 'red') +
theme_classic()
library(ggplot2)
df <- Credit
fit <- lm(Balance ~ Income + Student, data = df)
df$predicted <- predict(fit)
df$residuals <- residuals(fit)
ggplot(df, aes(x = TV, y = sales))
library(ggplot2)
df <- Credit
fit <- lm(Balance ~ Income + Student, data = df)
df$predicted <- predict(fit)
df$residuals <- residuals(fit)
ggplot(df, aes(x = Income, y = Balance))
library(ggplot2)
df <- Credit
fit <- lm(Balance ~ Income + Student, data = df)
df$predicted <- predict(fit)
df$residuals <- residuals(fit)
ggplot(df, aes(x = Income, y = Balance))
library(ggplot2)
df <- Credit
fit <- lm(Balance ~ Income + Student, data = df)
df$predicted <- predict(fit)
df$residuals <- residuals(fit)
ggplot(df, aes(x = Income, y = Balance)) +
geom_smooth(method = "lm", se = FALSE) +
geom_segment(aes(xend = Income, yend = predicted), color = 'grey') +
geom_point(color = 'red') +
theme_classic()
fit <- lm(Balance ~ Income + Student, data = credit)
summary(lm(Balance ~ Income + Student, data = credit))
summary(lm(Balance ~ Income + Student + Income*Student, data = credit))
library(car)
install.packages("car")
model <- lm(Balance ~ Income + Student, data = credit)
avPlots(model)
library(car)
avPlots(model)
attach(Credit)
corr(Balance, Income)
cor(Balance, Income)
cor(Balance, Student)
cor(Balance, Age)
library(ISLR2)
head(Boston)
?Boston
par(mfrow=c(1,3))
boxplot(Boston$crim)
title("Crime rates")
boxplot(Boston$tax)
title("Tax rates")
boxplot(Boston$ptratio)
title("Pupil-teacher ratios")
hist(Boston$crim, breaks = 30)
hist(Boston$tax, breaks = 30)
hist(Boston$ptratio, breaks = 30)
summary(Boston)
par(mfrow=c(1,3))
boxplot(Boston$crim)
title("Crime rates")
boxplot(Boston$tax)
title("Tax rates")
boxplot(Boston$ptratio)
title("Pupil-teacher ratios")
hist(Boston$crim, breaks = 30)
hist(Boston$tax, breaks = 30)
hist(Boston$ptratio, breaks = 30)
library(ggplot2)
df <- read.csv("Advertising.csv")
fit <- lm(sales ~ TV, data = df)
df$predicted <- predict(fit)
df$residuals <- residuals(fit)
ggplot(df, aes(x = TV, y = sales)) +
geom_smooth(method = "lm", se = FALSE) +
geom_segment(aes(xend = TV, yend = predicted), color = 'grey') +
geom_point(color = 'red') +
theme_classic()
ggplot(Auto, aes(x = horsepower, y = mpg)) +
geom_smooth(method = "lm", aes(color = 'orange'), se = FALSE) +
geom_smooth(method = "lm", formula = y ~ poly(x, 2), aes(color = 'blue'), se = FALSE) +
geom_smooth(method = "lm", formula = y ~ poly(x, 5), aes(color = 'green'), se = FALSE) +
geom_point(color = 'grey', shape = 21) +
scale_color_identity(name = "Model fit",
breaks = c("orange", "blue", "green"),
labels = c("Linear", "Degree 2", "Degree 5"),
guide = "legend") +
theme_classic()
load("als.RData")
length(train.y)
length(test.y)
summary(train.y)
hist(train.y, breaks = 40)
colnames(train.X)[1:20]
pairs(train.X[,21:25])
lm.model <- lm(train.y ~ ., data = train.X)
coef(summary(lm.model))[1:20, 1:4]
summary(lm.model)$r.squared
pwd
cd
lm.model <- lm(train.y ~ ., data = train.X)
coef(summary(lm.model))[1:20]
summary(lm.model)$r.squared
lm.model <- lm(train.y ~ ., data = train.X)
coef(summary(lm.model))[1:20,]
summary(lm.model)$r.squared
